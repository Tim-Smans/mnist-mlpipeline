# PIPELINE DEFINITION
# Name: mnist-pipeline
# Description: End-to-end MNIST training pipeline using Docker
# Inputs:
#    epochs: int [Default: 5.0]
components:
  comp-get-latest-model:
    executorLabel: exec-get-latest-model
  comp-load-data:
    executorLabel: exec-load-data
    outputDefinitions:
      artifacts:
        output_dataset_test:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
        output_dataset_train:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
  comp-train-model:
    executorLabel: exec-train-model
    inputDefinitions:
      artifacts:
        test_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
        train_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        epochs:
          defaultValue: 5.0
          isOptional: true
          parameterType: NUMBER_INTEGER
    outputDefinitions:
      artifacts:
        trained_model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-get-latest-model:
      container:
        command:
        - python
        - /app/get_latest_model.py
        image: timsmans/ml-pipeline:latest
    exec-load-data:
      container:
        args:
        - --output_dataset_train
        - '{{$.outputs.artifacts[''output_dataset_train''].path}}'
        - --output_dataset_test
        - '{{$.outputs.artifacts[''output_dataset_test''].path}}'
        command:
        - python
        - /app/data/load_data.py
        image: timsmans/ml-pipeline:latest
    exec-train-model:
      container:
        args:
        - --train_data
        - '{{$.inputs.artifacts[''train_data''].path}}'
        - --test_data
        - '{{$.inputs.artifacts[''test_data''].path}}'
        - --trained_model
        - '{{$.outputs.artifacts[''trained_model''].path}}'
        - --epochs
        - '{{$.inputs.parameters[''epochs'']}}'
        command:
        - python
        - /app/train_model.py
        image: timsmans/ml-pipeline:latest
pipelineInfo:
  description: End-to-end MNIST training pipeline using Docker
  name: mnist-pipeline
root:
  dag:
    tasks:
      get-latest-model:
        cachingOptions: {}
        componentRef:
          name: comp-get-latest-model
        dependentTasks:
        - train-model
        taskInfo:
          name: get-latest-model
      load-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-load-data
        taskInfo:
          name: load-data
      train-model:
        cachingOptions: {}
        componentRef:
          name: comp-train-model
        dependentTasks:
        - load-data
        inputs:
          artifacts:
            test_data:
              taskOutputArtifact:
                outputArtifactKey: output_dataset_test
                producerTask: load-data
            train_data:
              taskOutputArtifact:
                outputArtifactKey: output_dataset_train
                producerTask: load-data
          parameters:
            epochs:
              componentInputParameter: epochs
        taskInfo:
          name: train-model
  inputDefinitions:
    parameters:
      epochs:
        defaultValue: 5.0
        isOptional: true
        parameterType: NUMBER_INTEGER
schemaVersion: 2.1.0
sdkVersion: kfp-2.12.1
